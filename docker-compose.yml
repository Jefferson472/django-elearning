version: "3.9"
services:
  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis
    container_name: 'redis'
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 #--loglevel warning --requirepass ${REDIS_DEFAULT_PASS}
    volumes:
      - ./redis:/var/lib/redis/data

  memcache:
    image: memcached
    container_name: 'memcache'
    restart: always
    ports:
      - '11211:11211'
    volumes:
      - ./cache:/var/lib/cache/data
  
  app:
    container_name: app
    restart: always
    build:
      context: src
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    command: python src/manage.py runserver 0.0.0.0:8000 --settings=setup.settings.prod
    environment:
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
    depends_on:
      - db
      - redis
      - memcache

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/templates:/etc/nginx/templates
    depends_on:
      - app